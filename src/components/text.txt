<div className="home-layer-one">
                {/* ============ SMALL ANIMATION BOX ================ */}
                <div id='homeLayerTwo' className="small-animation-box">
                    <div className="small-animation small-animation-one"></div>  
                    <div className="small-animation small-animation-two"></div>                        
                    <div className="small-animation small-animation-three"></div>                        
                    <div className="small-animation small-animation-four"></div>                        
                    <div className="small-animation small-animation-five"></div>  
                </div>
                <div id='homeLayerThree' className="home-layer-three">
                    <div className="home-layer-three-box">

                    </div>
                </div>

                <div id='homeLayerFour' className="home-layer-four">
                        <div className="big-animation big-animation-one">
                            <div class="outer"><div class="inner2"></div></div>
                        </div>  
                        <div className="big-animation big-animation-two"><div class="outer"><div class="inner3"></div></div>
                            <div className="big-animation-sub">
                                <div class="outer10"><div class="inner10"></div></div>
                            </div>
                            <p className="scroll-down">Scroll down</p>
                        </div> 
                        <div className="big-animation big-animation-three">
                            <div class="outer"><div class="inner"></div></div>    
                        </div>  
                        <div className="big-animation big-animation-four">
                            <div class="outer"><div class="inner"></div></div>    
                        </div>  
                        <div className="big-animation big-animation-five">
                            <div class="outer"><div class="inner"></div></div>    
                        </div>  
                        <div className="big-animation big-animation-six">
                            <div class="outer"><div class="inner"></div></div>    
                        </div>  
                        <div className="big-animation big-animation-seven">
                            <div class="outer"><div class="inner"></div></div>    
                        </div>  
                        <div className="big-animation big-animation-eight">
                            <div class="outer"><div class="inner3"></div></div>    
                        </div> 
                        <div className="big-animation big-animation-nine">
                            <div class="outer"><div class="inner2"></div></div>    
                        </div>  
                </div>

                <div id='homeLayerFive' className="home-layer-five">
                    <div className="home-layer-five-box">
                        <h1 className="home-title">Your AI-powered</h1>
                        <h1 className="home-title1">creative Studio</h1>

                        <article className="home-article mt-3">Meet Captions. The next generation of storytelling - </article>
                        <article className="home-article">at your fingertips. Discover the power of AI </article>
                        <article className="home-article">and create studio-grade videos in just a few taps.</article>
                        <div className="home-image-layout mt-3">
                            {/* <img src={homeLogo} alt="Home Page Image"  className="home-image"/> */}
                            {/* <iframe className="home-image" src={homeVideo}></iframe> */}
                        </div>
                        
                    </div>
                    
                    
                </div>

            </div>


            
.navbar-link {
    text-decoration: none;
    letter-spacing: 1px;
    font-weight: 700 !important;
    color: #d6d0e0 !important;
    transform-style: preserve-3d;
    cursor: pointer;
    transform: translateY(10px);
  
    /* opacity: 0; */
  }
  .navbar-link1:hover{
    /* transform: translate3d(10px, 0%, 0px) scale3d(1, 1, 1) rotateX(50deg) rotateY(50deg) rotateZ(50deg) skew(50deg, 50deg) !important; */
    /* color: red !important; */
    animation: roll 0.5s;
    /* transform: translate3d(0px, 0%, 0px) scale3d(1, 1, 1) rotateX(0deg) rotateY(0deg) rotateZ(0deg) skew(0deg, 0deg);
    transform-style: preserve-3d; */
  
  }


  <div class="menu_link _2" style="transform: translate3d(0px, 0%, 0px) scale3d(1, 1, 1) rotateX(0deg) rotateY(0deg) rotateZ(0deg) skew(0deg, 0deg)
  ; transform-style: preserve-3d; opacity: 0;">Blog</div>















.inner10 {
    position: absolute;
    height: 25px;
    width: 1.1px;
    /* background-color: #A14FF3; */
    top: 20px;
    /* border-radius: 30%; */
    filter: blur(.5px);
  
    box-shadow: 0px 2px -4px 0.1px #f8f7fa;
    background-image: linear-gradient(to bottom, #faf9fb 90%, #d933fb 95%);
    animation: biganimation 3s forwards 0s infinite;
    /* z-index: 9999; */
  
  }



  .home-layer-three-box::before {
    top: 0px;
    left: 10px;
    border-top: 1.2px solid #9835F8;
    border-left: 1.2px solid #9835F8;
    /* transition: 0.5s all; */
    /* display: block; */
    content: "";
    width: 13.5px;
    height: 13.5px;
    position: absolute;
    /* animation: name duration timing-function delay iteration-count direction fill-mode; */
    /* animation: borderanimation 3s ease-in 1s alternate infinite;
     */
     animation: borderanimation 5s infinite;
     /* animation-name: borderanimation;
     animation-duration: 3s;
     animation-iteration-count: infinite; */
  
    /* z-index: -1; */
  }
  
  .home-layer-three-box::after {
    top: 0px;
    right: 10px;
    border-top: 1.2px solid #9835F8;
    border-right: 1.2px solid #9835F8;
    /* transition: 0.5s all; */
    /* display: block; */
    content: "";
    width: 13.5px;
    height: 13.5px;
    position: absolute;
    animation: borderanimation 5s infinite;
  
    /* animation-name: borderanimation;
     animation-duration: 3s;
     animation-iteration-count: infinite; */
  
  }
  
  .home-layer-three-box::before {
    bottom: 0px;
    left: 10px;
    border-bottom: 1.2px solid #9835F8;
    border-left: 1.2px solid #9835F8;
    /* transition: 0.5s all; */
    /* display: block; */
    content: "";
    width: 13.5px;
    height: 13.5px;
    position: absolute;
    animation: borderanimation 5s infinite;
  
    /* animation-name: borderanimation;
     animation-duration: 3s;
     animation-iteration-count: infinite; */
  
  }
  

  



  const imageSection = document.querySelectorAll('.image-section');
  const imageContainer = document.querySelector('.image-container');


  const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
  console.log('11111111111', scrollTop);

  const windowHeight = window.innerHeight;
  console.log('2222222222222222', windowHeight);

  if (scrollTop >= 700) {
      imageSection.classList.add('scrolled-down');
      imageSection.classList.remove('scrolled-up');
  } else {
      imageSection.classList.add('scrolled-up');
      imageSection.classList.remove('scrolled-down');
  }


  if (scrollTop >= 1000) {
      imageContainer.style.transform = 'translate(-50%, -100%)';
    } else {
      imageContainer.style.transform = 'translate(-50%, 0)';
    }






    import React, { useState, useEffect } from 'react';
    import homeVideo from '../assert/video/video1.mp4';
    
    
    const One = () => {
    
        useEffect(() => {
            // Aos.init();
            const handleScroll = () => {
                const reveals = document.querySelectorAll('.home-image');
    
                console.log('11111111111', reveals);
    
                const windowHeight = window.innerHeight;
    
                console.log('2222222222222222', windowHeight);
    
                const elementVisible = -10;
          
                for (let i = 0; i < reveals.length; i++) {
                    const elementTop = reveals[i].getBoundingClientRect().top;
    
                console.log('3333333333', elementTop, 'dddddddddd', windowHeight - elementVisible);
            
                    if (elementTop < windowHeight - elementVisible) {
                        // reveals[i].classList.add('active');
                    } else {
                        // reveals[i].classList.remove('active');
                    }
                }
            };
          
            window.addEventListener('scroll', handleScroll);
            
            // return () => {
            // window.removeEventListener('scroll', handleScroll);
            // };
        })
    
        return (
            <div className="one">
                <div className="home-image-layout ">
                    {/* <img src={homeLogo} alt="Home Page Image"  className="home-image"/> */}
                    <iframe className="home-image" src={homeVideo}></iframe>
                </div>
            </div>
        )
    }
    
    export default One;







    if (scrollPosition >= 190 ){
        let qqq = parseInt(scrollPosition) / 177;
        imageContainer.style.transform   = 'scale('+ moveOne + ',' + qqq.toString() + ')';
        console.log('zzzzzzzzzzzzzzzzzzzzzz', imageContainer.style.transform );

    }


    else




    import React, { useEffect, useState } from "react";
    import './App.css';
    import Header from './components/Header';
    import Home from './components/Home';
    import One from './components/ScrollOne';
    
    // Bootstrap CSS
    // import "bootstrap/dist/css/bootstrap.min.css";
    
    import "bootstrap/dist/css/bootstrap.min.css";
    // Bootstrap Bundle JS
    // import "bootstrap/dist/js/bootstrap.bundle.min";
    
    function App() {
    
        const [scrollPosition, setScrollPosition] = useState(0);
    
        useEffect(() => {
    
            const handleScroll = () => {
                setScrollPosition(window.scrollY);
            };
    
            window.addEventListener('scroll', handleScroll);
    
            return () => {
                window.removeEventListener('scroll', handleScroll);
            };
        },  []);
    
        useEffect(() => {
            const stickySection = document.querySelector('.sticky-section');
            const windowHeight = window.innerHeight;
            // const scrollPosition = window.scrollY;
            console.log('-------------------windowHeight', windowHeight);
    
            if (scrollPosition < windowHeight) {
                stickySection.style.position = 'sticky';
                stickySection.style.top = '0';
            } else {
                stickySection.style.position = 'static';
            }
        })
    
        return (
            <div className="ai-website">
                <div className='sticky-section'>
                    <Header />
                    <Home />
    
                </div>
                <div className='content-section'>
                    <One />
                </div>
            </div>
        );
    }
    
    export default App;
    
    
    // import logo from './logo.svg';
    // import './App.css';
    
    // function App() {
    //   return (
    //     <div className="App">
    //       <header className="App-header">
    //         <img src={logo} className="App-logo" alt="logo" />
    //         <p>
    //           Edit <code>src/App.js</code> and save to reload.
    //         </p>
    //         <a
    //           className="App-link"
    //           href="https://reactjs.org"
    //           target="_blank"
    //           rel="noopener noreferrer"
    //         >
    //           Learn React
    //         </a>
    //       </header>
    //     </div>
    //   );
    // }
    
    // export default App;
    
    
    


    if (scrollPosition >= 150){
        let bb = parseInt(scrollPosition) - 150;

        imageSection.style.transform = "translate(0%, -90%)";

    }
      else





      if (scrollPosition >= 188 ){
        // imageSection.style.transform = "translate(0%, -136%)";
        let www = parseInt(scrollPosition) / 135;
        let www1 = parseInt(scrollPosition) / 133;
        let qqq = parseInt(scrollPosition) / 170;
        imageContainer.style.transform   = 'scale('+ qqq.toString() + ',' +  moveOne + ')';
        // console.log('zzzzzzzzzzzzzzzzzzzzzz', scrollPosition, imageContainer.style.transform );

    }

    else




   <div>
                <img src={QRCode} alt="Home Page Image"  className="home-image"/>
            </div>  



  <div className='image-section'>
                <img src={QRCode} alt="Home Page Image"  className="qrcode-image"/>
            </div> 





    // console.log('-----------------',scrollPosition );

    if (imageSection) {

 if (scrollPosition > 50 && scrollPosition < 210 ) {
        let aa = (parseInt(scrollPosition) - 50) * 0.5;

        imageSection.style.transform = "translate(0%, -" + aa.toString() +"%)";
        // console.log('1111111111', scrollPosition, '----', imageSection.style.transform, '---' ,  'translate(0% , -', aa.toString() ,'%)');
      } else {
        // console.log('22222222222');

        // imageSection.style.transform = 'translate(0%, 0%)';
      }
    }

    // 188 -170
     if (scrollPosition >= 210 && scrollPosition <= 705){
        let www = (parseInt(scrollPosition) / 187) * 0.5;
        let www1 = (parseInt(scrollPosition) / 183) * 0.5;
        setMoveOne(www1);

        // (300 + (parseInt(scrollPosition) - 150) * 2);
        imageContainer.style.transform   = 'scale('+ www.toString() + ',' + www1.toString() + ')';
        // console.log('yyyyyyyyyyyyy',scrollPosition,  www, www1, '------------', imageContainer.style.transform)

    } 


 if (scrollPosition > 50 && scrollPosition < 150 ) {
        let aa = parseInt(scrollPosition) - 50;

        imageSection.style.transform = "translate(0%, -" + aa.toString() +"%)";
        // console.log('1111111111', scrollPosition, '----', imageSection.style.transform, '---' ,  'translate(0% , -', aa.toString() ,'%)');
      } else {
        // console.log('22222222222');

        // imageSection.style.transform = 'translate(0%, 0%)';
      }
    }

    // 188 -170
     if (scrollPosition >= 150 && scrollPosition <= 705){
        let www = parseInt(scrollPosition) / 135;
        let www1 = parseInt(scrollPosition) / 133;
        setMoveOne(www1);

        // (300 + (parseInt(scrollPosition) - 150) * 2);
        imageContainer.style.transform   = 'scale('+ www.toString() + ',' + www1.toString() + ')';
        // console.log('yyyyyyyyyyyyy',scrollPosition,  www, www1, '------------', imageContainer.style.transform)

    } 




else if (scrollPosition > 360 && scrollPosition <= 1705){
        let www = (parseInt(scrollPosition) * 0.001) + 1;
        let www1 = (parseInt(scrollPosition) * 0.0005  ) + 1;
        console.log('JJJJJJJJJJJJJJ', www, www1);
        setMoveOne(www1);

        // (300 + (parseInt(scrollPosition) - 150) * 2);
        imageContainer.style.transform   = 'scale('+ www.toString() + ',' + www1.toString() + ')';
        // console.log('yyyyyyyyyyyyy',scrollPosition,  www, www1, '------------', imageContainer.style.transform)

    } 



let www = ((parseInt(scrollPosition) * 0.0001) + (parseInt(scrollPosition) * 0.0001)) + 1;
        let www1 = ((parseInt(scrollPosition) * 0.0001 ) + (parseInt(scrollPosition) * 0.0001)) + 1;
        console.log('JJJJJJJJJJJJJJ', www, www1);
        setMoveOne(www1);

        // (300 + (parseInt(scrollPosition) - 150) * 2);
        imageContainer.style.transform   = 'scale3d('+ www.toString() + ',' + www1.toString() + ',1)';
        console.log('yyyyyyyyyyyyy',scrollPosition,  www, www1, '------------', imageContainer.style.transform)


translate(0%, ' + aa.toString() + '%)



{/* controls allow="autoplay; controls" */}





 19-07-2023
main contenct:

import React, { useState, useEffect } from 'react';
import AnimationVideo from '../assert/video/video2.mp4';
import QRCode from '../assert/img/qr-code.png';


const MainCaption = () => {

    // Declare the State
    const [scrollPosition, setScrollPosition] = useState(0);
    const [transaleImageY, setTransaleImageY] = useState('');
    const [transaleImageYOne, setTransaleImageYOne] = useState('');


    // Set the Scroll Top
    useEffect(() => {

        const handleScroll = () => {
            setScrollPosition(window.scrollY);
        };

        window.addEventListener('scroll', handleScroll);

        return () => {
            window.removeEventListener('scroll', handleScroll);
        };
    },  []);


  useEffect(() => {

    // Declare the Element
    const imageSection = document.querySelector('.video-section');
    const imageContainer = document.querySelector('.video-container .mobile-panel');
    const videoContainer1 = document.querySelector('.video-container .mobile-panel .mobile-body');
    const videoContainer = document.querySelector('.video-container .mobile-panel .mobile-body .home-video');
    const mobileBottom = document.querySelector('.video-container .mobile-panel .mobile-bottom');

    //  Increase the Mobile View
    if (imageSection) {

        if (scrollPosition > 50 && scrollPosition <= 360 ) {

            let aa = 0;
            
            if (transaleImageY != ''){

                aa = transaleImageY;
            } else {

                aa = ((parseInt(scrollPosition) - 50) * -0.1).toString();
            }

            imageSection.style.transform = "translate(0%, " + aa +"%)";
        } 
    }

    // Animation for the Video
    if (scrollPosition > 360 && scrollPosition <= 1660){
        const startScroll = 360;
        const endScroll = 1660; // 1350
        const startScale = 1;
        const endScale = 5.2;

        const scrollRange = endScroll - startScroll;
        const scaleRange = endScale - startScale;
        
        const scrollPercentage = (scrollPosition - startScroll) / scrollRange;
        const scaleValue = startScale + (scrollPercentage * scaleRange);
        const scaleValue1 = (startScale + (scrollPercentage * scaleRange))* 1.3;

        const endScroll1 = 1555; // 1350  // 1450

        let aaStartScroll = 500;
        let startY = -30.9;
        let endY = 310;
        let translateY = -30.9;
        
        if (scrollPosition >= aaStartScroll && scrollPosition <= endScroll) {

            var progress = (scrollPosition - aaStartScroll) / (endScroll - aaStartScroll);
            translateY = (startY + (progress * (endY - startY))).toString();
            
        }
        if (endScroll < 1349 && endScroll > 1345){
            setTransaleImageY(translateY)
        }

        imageSection.style.transform = "translate(0%, " + translateY +"%)";
        setTransaleImageYOne(translateY)
        
        imageContainer.style.transform   = 'scale('+ scaleValue1.toString() + ',' + scaleValue.toString() + ')';
    } 
    else {

        imageSection.style.transform = "translate(0%, " + transaleImageY +"%)";
    }

    // Stoping the video few sec's to Make Second Section come with join in this
    if (scrollPosition> 1670 && scrollPosition < 1820){ // 1660
        
        const cccstartScroll = 1670;
        const cccendScroll = 1820;
        const ccctranslateYStart = 311.5;
        const ccctranslateYEnd = 343;
        const progress = (scrollPosition - cccstartScroll) / (cccendScroll - cccstartScroll);
        const cctranslateY = ccctranslateYStart + (ccctranslateYEnd - ccctranslateYStart) * progress;
        imageSection.style.transform = "translate(0%, " + cctranslateY +"%)";
    }


    console.log('111111111111111111111', scrollPosition);
    // Setting background for Video
    if (scrollPosition >= 1670 && scrollPosition <= 2500) {  // 1360
        
        videoContainer.style.backgroundColor = '#100919';
    } else {
        videoContainer.style.backgroundColor = '#1C1D21';

    }

    // Mobile Bottom View Hide
    if ( scrollPosition >= 1610){
        
        mobileBottom.style.opacity = 0;
    } else {
        
        mobileBottom.style.opacity = 1;
    }

    // Video Play and Controls Off
    videoContainer.play();
    videoContainer.controls = false;


  }, [scrollPosition]);


    //  Set the QR Code Image
    useEffect(() => {
        const imageSection = document.querySelector('.image-section');

        if (scrollPosition >= 130) {
            if (scrollPosition >= 130 && scrollPosition <= 250) {
                let aa = parseInt(scrollPosition) - 130;
                imageSection.style.transform = "translate(0%, -" + aa.toString() +"%)";
                imageSection.style.opacity = '1'; 
            }

        } else {
            imageSection.style.opacity = '0';
        }
  }, [scrollPosition]);

    return (
        <div className="main-caption">
            <div className='main-container'>
                <div className="video-section">
                    <div className="video-container">
                        <div className='mobile-panel'>
                            <div className='mobile-in-panel1'>
                                <div className='mobile-in-panel'>
                                
                                <div className='mobile-top-panel1'> 
                                    <div className='mobile-top-panel'>
                                        <div className='mobile-top'>
                                            <div className='mobile-icon'> <svg xmlns="http://www.w3.org/2000/svg" fill='white' height={20} width={20} viewBox="0 0 24 24" id="left-arrow"><path d="M8.29,11.29a1,1,0,0,0-.21.33,1,1,0,0,0,0,.76,1,1,0,0,0,.21.33l3,3a1,1,0,0,0,1.42-1.42L11.41,13H15a1,1,0,0,0,0-2H11.41l1.3-1.29a1,1,0,0,0,0-1.42,1,1,0,0,0-1.42,0ZM2,12A10,10,0,1,0,12,2,10,10,0,0,0,2,12Zm18,0a8,8,0,1,1-8-8A8,8,0,0,1,20,12Z"></path></svg></div>

                                            <div className='mobile-camera1'>

                                                <div className='mobile-camera'>
                                                    <div className='mobile-in-camera'>
                                                    </div>
                                                </div>
                                            </div>

                                            <div className='mobile-top-text'>AI - Caption</div>
                                        </div>
                                    </div>
                                    <div className='mobile-body'>
                                        {/* <iframe src={AnimationVideo} className='home-video' frameborder="0"
        allow="autoplay; fullscreen" ></iframe> */}
                                            <video className='home-video' src={AnimationVideo} autoplay muted controls="none" >
                                                    
                                            </video>
                                    </div>
                                    <div className='mobile-bottom'>
                                        <div className='chat-top chat-top1'>
                                            <div>
                                                <p className='chat-one'>00:01 - 00:17</p>
                                            </div>
                                            <div>
                                                <p className='chat-one'>Edit</p>
                                            </div>
                                        </div>
                                        <div className='chat-body'>
                                            <div className='chat-body-caption'>
                                                <div className='chat-avatar'>
                                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 61.8 61.8" id="avatar"><g data-name="Layer 2"><g data-name="—ÎÓÈ 1"><circle cx="30.9" cy="30.9" r="30.9" fill="#485a69"></circle><path fill="#f9dca4" fill-rule="evenodd" d="M23.242 38.592l15.92.209v12.918l-15.907-.121-.013-13.006z"></path><path fill="#d5e1ed" fill-rule="evenodd" d="M53.478 51.993A30.814 30.814 0 0 1 30.9 61.8a31.225 31.225 0 0 1-3.837-.237A30.699 30.699 0 0 1 15.9 57.919a31.033 31.033 0 0 1-7.857-6.225l1.284-3.1 13.925-6.212c0 4.535 1.84 6.152 7.97 6.244 7.57.113 7.94-1.606 7.94-6.28l12.79 6.281z"></path><path fill-rule="evenodd" d="M39.165 38.778v3.404c-2.75 4.914-14 4.998-15.923-3.59z" opacity=".11"></path><path fill="#ffe8be" fill-rule="evenodd" d="M31.129 8.432c21.281 0 12.987 35.266 0 35.266-12.267 0-21.281-35.266 0-35.266z"></path><path fill="#f9dca4" fill-rule="evenodd" d="M18.365 24.045c-3.07 1.34-.46 7.687 1.472 7.658a31.973 31.973 0 01-1.472-7.658zM44.14 24.045c3.07 1.339.46 7.687-1.471 7.658a31.992 31.992 0 001.471-7.658z"></path><path fill="#ecbe6a" fill-rule="evenodd" d="M43.409 29.584s1.066-8.716-2.015-11.752c-1.34 3.528-7.502 4.733-7.502 4.733a16.62 16.62 0 0 0 3.215-2.947c-1.652.715-6.876 2.858-11.61 1.161a23.715 23.715 0 0 0 3.617-2.679s-4.287 2.322-8.44 1.742c-2.991 2.232-1.66 9.162-1.66 9.162C15 18.417 18.697 6.296 31.39 6.226c12.358-.069 16.17 11.847 12.018 23.358z"></path><path fill="#fff" fill-rule="evenodd" d="M23.255 42.179a17.39 17.39 0 0 0 7.958 6.446l-5.182 5.349L19.44 43.87z"></path><path fill="#fff" fill-rule="evenodd" d="M39.16 42.179a17.391 17.391 0 0 1-7.958 6.446l5.181 5.349 6.592-10.103z"></path><path fill="#3dbc93" fill-rule="evenodd" d="M33.366 61.7q-1.239.097-2.504.098-.954 0-1.895-.056l1.031-8.757h2.41z"></path><path fill="#3dbc93" fill-rule="evenodd" d="M28.472 51.456l2.737-2.817 2.736 2.817-2.736 2.817-2.737-2.817z"></path></g></g></svg>
                                                </div>
                                                <div>
                                                    <p className='chat-one'>00:01 - 00:17</p>
                                                </div>
                                            </div>
                                            <div className='chat-wrapping'>
                                                <div class="chat-wrapper">
                                                    <div className='chat-two'>One</div>
                                                    <div className='chat-two'>Two</div>
                                                    <div className='chat-two'>Three</div>
                                                    <div className='chat-two'>Four</div>
                                                    <div className='chat-two'>Three</div>
                                                    <div className='chat-two'>Four</div>
                                                    <div className='chat-two'>Five</div>
                                                </div>
                                            </div>
                                        </div>

                                        <div className='chat-bottom'>
                                        <div className='chat-body-caption'>
                                                <div className='chat-avatar'>
                                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 61.8 61.8" id="avatar"><g data-name="Layer 2"><g data-name="—ÎÓÈ 1"><circle cx="30.9" cy="30.9" r="30.9" fill="#485a69"></circle><path fill="#f9dca4" fill-rule="evenodd" d="M23.242 38.592l15.92.209v12.918l-15.907-.121-.013-13.006z"></path><path fill="#d5e1ed" fill-rule="evenodd" d="M53.478 51.993A30.814 30.814 0 0 1 30.9 61.8a31.225 31.225 0 0 1-3.837-.237A30.699 30.699 0 0 1 15.9 57.919a31.033 31.033 0 0 1-7.857-6.225l1.284-3.1 13.925-6.212c0 4.535 1.84 6.152 7.97 6.244 7.57.113 7.94-1.606 7.94-6.28l12.79 6.281z"></path><path fill-rule="evenodd" d="M39.165 38.778v3.404c-2.75 4.914-14 4.998-15.923-3.59z" opacity=".11"></path><path fill="#ffe8be" fill-rule="evenodd" d="M31.129 8.432c21.281 0 12.987 35.266 0 35.266-12.267 0-21.281-35.266 0-35.266z"></path><path fill="#f9dca4" fill-rule="evenodd" d="M18.365 24.045c-3.07 1.34-.46 7.687 1.472 7.658a31.973 31.973 0 01-1.472-7.658zM44.14 24.045c3.07 1.339.46 7.687-1.471 7.658a31.992 31.992 0 001.471-7.658z"></path><path fill="#ecbe6a" fill-rule="evenodd" d="M43.409 29.584s1.066-8.716-2.015-11.752c-1.34 3.528-7.502 4.733-7.502 4.733a16.62 16.62 0 0 0 3.215-2.947c-1.652.715-6.876 2.858-11.61 1.161a23.715 23.715 0 0 0 3.617-2.679s-4.287 2.322-8.44 1.742c-2.991 2.232-1.66 9.162-1.66 9.162C15 18.417 18.697 6.296 31.39 6.226c12.358-.069 16.17 11.847 12.018 23.358z"></path><path fill="#fff" fill-rule="evenodd" d="M23.255 42.179a17.39 17.39 0 0 0 7.958 6.446l-5.182 5.349L19.44 43.87z"></path><path fill="#fff" fill-rule="evenodd" d="M39.16 42.179a17.391 17.391 0 0 1-7.958 6.446l5.181 5.349 6.592-10.103z"></path><path fill="#3dbc93" fill-rule="evenodd" d="M33.366 61.7q-1.239.097-2.504.098-.954 0-1.895-.056l1.031-8.757h2.41z"></path><path fill="#3dbc93" fill-rule="evenodd" d="M28.472 51.456l2.737-2.817 2.736 2.817-2.736 2.817-2.737-2.817z"></path></g></g></svg>
                                                </div>
                                                <div>
                                                    <p className='chat-one'>00:01 - 00:17</p>
                                                </div>
                                            </div>
                                            <div className='chat-wrapping'>
                                                <div class="chat-wrapper">
                                                    <div className='chat-two'>One</div>
                                                    <div className='chat-two'>Two</div>
                                                    <div className='chat-two'>Three</div>
                                                    <div className='chat-two'>Four</div>
                                                    <div className='chat-two'>Five</div>
                                                    <div className='chat-two'>Three</div>
                                                    <div className='chat-two'>Three</div>
                                                    <div className='chat-two'>Four</div>
                                                    <div className='chat-two'>Five</div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            </div>
                        </div>

                    </div>
                </div>
                <div className='image-section'>
                    <img src={QRCode} alt="Home Page Image"  className="qrcode-image"/>
                </div> 
            </div>
        </div>
    )
}

export default MainCaption;

